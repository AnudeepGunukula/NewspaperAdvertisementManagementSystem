networks:
  dockerapi-dev:
    driver: bridge
services:
  newspaperadvertisementmanagementsystem:
    build:
      context: C:\Users\anude\source\repos\AnudeepGunukula\NewspaperAdvertisementManagementSystem
      dockerfile: Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: NewspaperAdvertisementManagementSystem
      target: base
    container_name: NewspaperAdvertisementManagementSystem
    depends_on:
      postgres_image:
        condition: service_started
    entrypoint: tail -f /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      ASPNETCORE_URLS: https://+:443;http://+:80
      DB_CONNECTION_STRING: host=postgres_image;port=5432;database=Namsdb;username=postgres;password=password
      DOTNET_USE_POLLING_FILE_WATCHER: '1'
      NUGET_FALLBACK_PACKAGES: ''
    image: newspaperadvertisementmanagementsystem:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages  "/app/bin/Debug/netcoreapp3.0/NewspaperAdvertisementManagementSystem.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      dockerapi-dev: {}
    ports:
    - published: 8000
      target: 80
    - target: 80
    - target: 443
    tty: true
    volumes:
    - C:\Users\anude\source\repos\AnudeepGunukula\NewspaperAdvertisementManagementSystem:/app:rw
    - C:\Users\anude\vsdbg\vs2017u5:/remote_debugger:rw
    - C:\Users\anude\AppData\Roaming\ASP.NET\Https:/root/.aspnet/https:ro
    - C:\Users\anude\AppData\Roaming\Microsoft\UserSecrets:/root/.microsoft/usersecrets:ro
    - C:\Users\anude\.nuget\packages:/root/.nuget/packages:ro
    - C:\Users\anude\source\repos\AnudeepGunukula\NewspaperAdvertisementManagementSystem:/src:rw
  postgres_image:
    environment:
      POSTGRES_DB: Namsdb
      POSTGRES_PASSWORD: password
      POSTGRES_USER: postgres
    image: postgres:latest
    networks:
      dockerapi-dev: {}
    ports:
    - target: 5432
    restart: always
    volumes:
    - C:\Users\anude\source\repos\AnudeepGunukula\NewspaperAdvertisementManagementSystem\dbscripts\seed.sql:/docker-entrypoint-initdb.d/seed.sql:rw
    - db_volume:/var/lib/postgresql/data:rw
version: '3.4'
volumes:
  db_volume: {}